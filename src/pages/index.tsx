import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { randomMaps } from '../helpers/randomMaps';

import { Socket, io } from 'socket.io-client';
import { DefaultEventsMap } from 'socket.io/dist/typed-events';

import ocean from '../../public/ocean.png';
import explosion from '../../public/explosion.png';
import ship from '../../public/ship.png';
import Image from 'next/image';

const myFleetIndex = Math.floor(Math.random() * 5);
const myFleet = randomMaps[myFleetIndex]!;

let socket: Socket<DefaultEventsMap, DefaultEventsMap>;

const Home: NextPage = () => {
	const [enemyFleet, setEnemyFleet] = useState<number[][]>([]);
	const [showGame, setShowGame] = useState(false);

	useEffect(() => {
		const socketInit = async () => {
			await fetch('/api/socket');
			socket = io();

			socket.on('connect', () => {});

			socket.on('get-field', (enemyFleetIndex) => {
				console.log('hisfleet', enemyFleetIndex);
				setEnemyFleet(JSON.parse(JSON.stringify(randomMaps[enemyFleetIndex]!)));
			});
		};
		socketInit();
	}, []);

	const handleStart = () => {
		socket.emit('send-field', myFleetIndex);
		setShowGame((prevShow) => !prevShow);
	};

	const handleClick = (y: number, x: number) => {
		const newEnemyFleet = [...enemyFleet];
		if (enemyFleet[y]![x] === 0) newEnemyFleet[y]![x] = 3;
		else if (enemyFleet[y]![x] === 1) newEnemyFleet[y]![x] = 2;
		setEnemyFleet(newEnemyFleet);
		if (!enemyFleet.flat().find((element) => element === 1)) alert('You win');
	};

	return (
		<>
			<Head>
				<title>Battleship</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/battleship-icon.png" />
			</Head>

			<main className="container mx-auto flex min-h-screen flex-col items-center justify-center gap-4">
				{showGame ? (
					<>
						<section className="grid-rows-10 grid grid-cols-10 gap-0.5 bg-black p-2">
							{myFleet.map((row) => {
								return row.map((square, x) => {
									let status = 0;
									if (square === 1) status = 1;

									return (
										<button
											key={x}
											className={`h-10 w-10 cursor-default bg-slate-500`}
										>
											{status === 0 ? (
												<Image
													src={ocean}
													alt="ocean sprite"
													width={40}
													height={40}
												/>
											) : (
												<Image
													src={ship}
													alt="ship sprite"
													width={40}
													height={40}
												/>
											)}
										</button>
									);
								});
							})}
						</section>
						<section className="grid-rows-10 grid grid-cols-10 gap-0.5 bg-black p-2">
							{enemyFleet.map((row, y) => {
								return row.map((square, x) => {
									let status = 0;
									if (square === 2) status = 2;
									else if (square === 3) status = 1;

									return (
										<button
											key={x}
											className={`h-10 w-10 bg-slate-500`}
											onClick={() => handleClick(y, x)}
										>
											{status === 1 ? (
												<Image
													src={ocean}
													alt="ocean sprite"
													width={40}
													height={40}
												/>
											) : status === 2 ? (
												<Image
													src={explosion}
													alt="explosion sprite"
													width={40}
													height={40}
												/>
											) : null}
										</button>
									);
								});
							})}
						</section>
					</>
				) : (
					<button
						className="rounded-full bg-sky-500 p-4 text-4xl font-bold shadow-lg"
						onClick={handleStart}
					>
						Start
					</button>
				)}
			</main>
		</>
	);
};

export default Home;
